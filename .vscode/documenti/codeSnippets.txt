var properties = typeof(ClienteViewModel).GetProperties();
List<string> allProperties = new List<string>();
List<string> allValues = new List<string>();

foreach(var property in properties)
{
    //var propertyName = property.Name;
    allProperties.Add(property.Name);               
}            
ViewBag.tableHeads = allProperties;

=========================================================

private UserData GetUserData()
{
    UserData userData = new UserData();

    string userRoles="";
    ViewBag.userId =  User.FindFirstValue(ClaimTypes.NameIdentifier); // will give the user's userId
    userData.UserId = User.FindFirstValue(ClaimTypes.NameIdentifier);

    ViewBag.userName =  User.FindFirstValue(ClaimTypes.Name); // will give the user's userName
    userData.UserName = User.FindFirstValue(ClaimTypes.Name);

    IEnumerable<Claim> roles = User.FindAll(ClaimTypes.Role);
    foreach(var role in roles)
    {
        userRoles += $"{role.Value}, ";
    }
    userData.UserRoles = userRoles;
    
    ViewBag.userEmail =  User.FindFirstValue(ClaimTypes.Email); // will give the user's Email
    userData.UserEmail = User.FindFirstValue(ClaimTypes.Email);

    ViewBag.userRoles= userRoles;
    
    //ViewBag.address = HttpContext.Features.Get<IHttpConnectionFeature>().RemoteIpAddress.ToString().Substring(7);
    ViewBag.address = HttpContext.Features.Get<IHttpConnectionFeature>().RemoteIpAddress.ToString();
    ViewBag.port = HttpContext.Features.Get<IHttpConnectionFeature>().RemotePort.ToString();

    //userData.UserIpAddress = HttpContext.Features.Get<IHttpConnectionFeature>().RemoteIpAddress.ToString().Substring(7);
    userData.UserIpAddress = HttpContext.Features.Get<IHttpConnectionFeature>().RemoteIpAddress.ToString();
    userData.UserIpPort = HttpContext.Features.Get<IHttpConnectionFeature>().RemotePort.ToString();

    return userData;
}        